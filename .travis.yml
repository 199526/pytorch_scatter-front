language: shell

os:
  - linux
  - osx
  - windows

env:
  global:
    - CUDA_HOME=/usr/local/cuda
  jobs:
    # Python 3.8
    include:
      - # PY=3.8 TORCH=1.6.0 cpu
        if: (tag is present or commit_message =~ ci-deploy) or os = osx
        env: PYTHON_VERSION=3.8 TORCH_VERSION=1.6.0 IDX=cpu
      - # PY=3.8 TORCH=1.6.0 cu92
        if: (tag is present or commit_message =~ ci-deploy) and os = linux
        env: PYTHON_VERSION=3.8 TORCH_VERSION=1.6.0 IDX=cu92
      - # PY=3.8 TORCH=1.6.0 cu101
        if: (tag is present or commit_message =~ ci-deploy) and os != osx
        env: PYTHON_VERSION=3.8 TORCH_VERSION=1.6.0 IDX=cu101
      - # PY=3.8 TORCH=1.6.0 cu102
        if: os != osx
        env: PYTHON_VERSION=3.8 TORCH_VERSION=1.6.0 IDX=cu102
      - # PY=3.8 TORCH=1.5.0 cpu
        if: (tag is present or commit_message =~ ci-deploy) or os = osx
        env: PYTHON_VERSION=3.8 TORCH_VERSION=1.5.0 IDX=cpu
      - # PY=3.8 TORCH=1.5.0 cu92
        if: (tag is present or commit_message =~ ci-deploy) and os = linux
        env: PYTHON_VERSION=3.8 TORCH_VERSION=1.5.0 IDX=cu92
      - # PY=3.8 TORCH=1.5.0 cu101
        if: (tag is present or commit_message =~ ci-deploy) and os != osx
        env: PYTHON_VERSION=3.8 TORCH_VERSION=1.5.0 IDX=cu101
      - # PY=3.8 TORCH=1.5.0 cu102
        if: os != osx
        env: PYTHON_VERSION=3.8 TORCH_VERSION=1.5.0 IDX=cu102

install:
  - source script/gcc.sh
  - source script/cuda.sh
  - source script/conda.sh
  - conda create --yes -n test python="${PYTHON_VERSION}"
  - source activate test
  - conda install pytorch=${TORCH_VERSION} ${TOOLKIT} -c pytorch --yes
  - source script/torch.sh
  - pip install flake8
  - pip install codecov
  - pip install .[test]
script:
  - flake8 .
  - python setup.py test
after_success:
  - python setup.py bdist_wheel --dist-dir=dist/torch-${TORCH_VERSION}
  - python script/rename_wheel.py ${IDX}
  - codecov
# deploy:
#   provider: s3
#   region: eu-central-1
#   edge: true
#   access_key_id: ${S3_ACCESS_KEY}
#   secret_access_key: ${S3_SECRET_ACCESS_KEY}
#   bucket: pytorch-geometric.com
#   local_dir: dist/torch-${TORCH_VERSION}
#   upload_dir: whl/torch-${TORCH_VERSION}
#   acl: public_read
#   on:
#     all_branches: true
#     repo: rusty1s/pytorch_scatter
#     condition: $TRAVIS_TAG != "" || $TRAVIS_COMMIT_MESSAGE =~ ci-deploy
notifications:
  email: false
